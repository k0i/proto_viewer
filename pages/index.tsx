import type { NextPage } from "next";
import Head from "next/head";
import NextLink from "next/link";
import {
  Box,
  Button,
  Link,
  Tab,
  TabList,
  TabPanel,
  TabPanels,
  Tabs,
} from "@chakra-ui/react";
import { useEffect } from "react";
import {
  Table,
  Thead,
  Tbody,
  Tr,
  Th,
  Td,
  TableCaption,
  TableContainer,
  Text,
} from "@chakra-ui/react";
import styles from "../styles/Home.module.css";
import { FileDescriptions, GrpcServices } from "./api/types";
import { ArrowForwardIcon } from "@chakra-ui/icons";
import { useRecoilState } from "recoil";
import { serviceState } from "../atoms/service";
import { fileState, fileStateFilter } from "../atoms/file";
const Home: NextPage = () => {
  const [services, setServices] = useRecoilState(serviceState);
  const [files, setFiles] = useRecoilState(fileState);
  const [filter, setFilter] = useRecoilState(fileStateFilter);
  useEffect(() => {
    const fetchAll = async () => {
      const svcs = await fetch("/api/services");
      const svcBody = (await svcs.json()) as GrpcServices;
      setServices(svcBody.services);
      const sbls = await fetch("/api/symbol", {
        method: "POST",
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
        },
        body: JSON.stringify(svcBody),
      });
      const sblBody = (await sbls.json()) as FileDescriptions;
      setFiles(sblBody.files);
      console.log(sblBody.files);
    };
    fetchAll();
  }, []);
  return (
    <div className={styles.container}>
      <Head>
        <title>grpc reflection</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box className={styles.main} p="12" rounded="md" bg="white">
        <TableContainer boxShadow="dark-lg" p="8" rounded="md" bg="white">
          <Table size="lg">
            <TableCaption placement="top">Reflection Info</TableCaption>
            <Thead>
              <Tr>
                <Th>Service</Th>
                <Th>FilePath</Th>
                <Th>Messages</Th>
              </Tr>
            </Thead>
            <Tbody>
              {services.map((s, i) => (
                <Tr
                  key={s + i}
                  boxShadow={i % 2 === 0 ? "lg" : "xs"}
                  p="6"
                  rounded="md"
                >
                  <Td boxShadow={i % 2 === 1 ? "inner" : "xl"}>
                    <NextLink href={`/${encodeURIComponent(s)}`} passHref>
                      <Link>
                        {Object.keys(files).length !== 0 &&
                          files[s]?.service.map((m: { name: string }) => (
                            <p key={m.name}>{m.name}</p>
                          ))}
                      </Link>
                    </NextLink>
                  </Td>
                  <Td>{Object.keys(files).length !== 0 && files[s]?.name}</Td>
                  <Td boxShadow={i % 2 === 1 ? "lg" : "xl"}>
                    {Object.keys(files).length !== 0 &&
                      files[s]?.messageType
                        .slice(0, 7)
                        .map((m: { name: string }, i: number) =>
                          i == 6 ? (
                            <p>...</p>
                          ) : (
                            <>
                              <Text as="i" key={m.name}>
                                {m.name}
                              </Text>
                              <br />
                            </>
                          )
                        )}
                  </Td>
                  <Td>
                    <NextLink
                      href={`/${
                        Object.keys(files).length !== 0 &&
                        encodeURIComponent(files[s]?.name)
                      }`}
                      passHref
                    >
                      <Button
                        as="a"
                        colorScheme={i % 2 === 1 ? "orange" : "teal"}
                        variant="outline"
                        rightIcon={<ArrowForwardIcon />}
                        onClick={() => setFilter(s)}
                      >
                        Call
                      </Button>
                    </NextLink>
                  </Td>
                </Tr>
              ))}
            </Tbody>
          </Table>
        </TableContainer>
      </Box>
    </div>
  );
};

export default Home;
